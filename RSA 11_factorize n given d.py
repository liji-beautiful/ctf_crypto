from Crypto.Util.number import getPrime
from gmpy2 import invert

e = 65537
n=24247680047708137255022199649762876686830705098685334493515986542637660999308097254756630155549140971181207224211249639975788406469111458791937629947177749929962156563516302780674686357830166995081492218625443788631263481347171901369645623862136878777509938912840794826944058000402453252946610045955371829781588213783354953781746394285012565626152009099893878964964824490993197594236109266903420482780262459332874444745510084994491582275430200048940794047789775166011937562046835513695646013845750971907645377559984314956880637511347658454315725777892876161416120715648772830789431014623154400949472361852160739147567
d=22451404865267332726692663978316231794410193429641629426667944754571288657705020944094814091261927955402566745191068414071605231874492600247377195484301085207592101936116945928817329410346067009407435659408108091333480790623755822190714188125824955032681662467140777144034962350739607676508021282766435347586665998550384757154368092564969016045547596226403893682206427789347747864576927849850348996487534761380222650170790879435069979198391564749226692393564318863630057692376426462146516574636090417975529983841360296246848615593154874379679011827419543644410877282237248361361359920876145213573691612899224273067409
"""
k=ed-1
即k=t*phi(n)
k=2^s*r
任何g,均有g^phi(n)=1(mod n)
g^x*phi(n)=1(mod n)
(2^s)*r=t*phi(n) #这里phi(n)是偶数
e=t*phi(n)/2^i(i<=s)
只要证明t不等于2^s即可
显然,由于phi(n)是偶数，故不等于
即找到i使得g^(k/2^i)模n不为1,即可分解n
这一步由于计算量较大在sage完成（代码忘保存了）

"""
k=d*e-1
i=0
print(k)
while True:
    if(k%(2**i)!=0):
        print(i)
        break
    i=i+1





