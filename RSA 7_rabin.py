from gmpy2 import invert,gcd,is_prime,iroot

p = 174841218668625475959541512640956452155550307119479663690903641194960085862692002072629763432688989681822645076520278851679469077878758405780013459943170833085479960908021953245791403470277480668402446570792387735880851551386737560567454906585757743480629026326058033774090138614445180185346712305561226484389
q = 134175129948141685717549832841241165684844418797343685630686754476433463689434012268272614980265270351640656943862696456501556544108997954980677040979640758702819267481962990548109001394612095237505171262333722757346074894508283227420419825646195047380630319091958323844480110152909060245444477147962961361649
n = p * q
e = 2
output=14409369572822819576145464718156076095261691163341839228235696194271632975552672664433851035825768899109024651433962192196441238149873991080365453570704804116582776898072857488911393070184820313961745580177795261734359656979423318093634849925251309586940328344082854390695374509958639111533764208618992795542036388253182139104479537763119529235459600855559744134423457963069825590529379014878894648118173471499191899893858805321733574167153907075710038286529958499176326219581565616304252652199044602607139760127754678136472001737714936821194539663712873574588802378753963457688024768608078641278749765343835308276920
"""
invert_2=invert(2,(p-1)*(q-1)) 
flag=pow(output,invert_2,p*q)
问题在于2和p-1不互素所以并没有解
所以要通过中国剩余定理求解
将output直接模p和q
得到两个方程
求解后联立为四个方程组通过中国剩余定理求解
"""
m_p_1=pow(output,1,p)
m_q_1=pow(output,1,q)

"""
Atkin算法
由于rabin一般要求p，q模4余三 ，而本题余1，
但是可以发现模8余5，
故可以用Atkin算法
本题不能用暴力破解法
因为flag填充过了所以很大
"""
e_1=21855152333578184494942689080119556519443788389934957961362955149370010732836500259078720429086123710227830634565034856459933634734844800722501682492896354135684995113502744155723925433784685083550305821349048466985106443923342195070931863323219717935078628290757254221761267326805647523168339038195153310548
b=pow(2*m_p_1,e_1,p)
i=(2*m_p_1*b**2)%p
x_1=(m_p_1*b*(i-1))%p
x_2=p-x_1

"""
这里发现q%8=1，故找不到好的简单的解题算法
所以直接sage解方程
q = 134175129948141685717549832841241165684844418797343685630686754476433463689434012268272614980265270351640656943862696456501556544108997954980677040979640758702819267481962990548109001394612095237505171262333722757346074894508283227420419825646195047380630319091958323844480110152909060245444477147962961361649
c=57077940412043043363177587443151209374651665592445855672638788981045622730289860919019723355617310621224166575991336634623849173526562507518424277666061605701335870728029094200388407880964274311661514087684627932797223348173587205216486086493438255970126422618628917430168613955412437388431582612380578505839
R.<x>=Zmod(q)[]
f=x^2-c
f.roots()
"""
y_1=90764909889315012617316011013111698326047066271761655465492321806867437008667219380555675642609714669497952739806514910265346316701618390133831340350404150618156448070655585915838715648050702098474108022322749388319236571956166589380848663603403896684535771695595142372721772656839802746422941644920004122143,
y_2=43410220058826673100233821828129467358797352525582030165194432669566026680766792887716939337655555682142704204056181546236210227407379564846845700629236608084662819411307404632270285746561393139031063240010973369026838322552116638039571162042791150696094547396363181471758337496069257499021535503042957239506,


flag_1=7439617359568026551771637531967125625455135777241676883282713551455754978476832506900289450480460011337236626534458296400909227441294322360926933337807720816697370628426389827075398037920081049045169607846078730944745214843408709011648271319191097449747239736140332762796711951810866582413141396336351565599537791134147563430951209722247352174240334095167830193321416893184212044671216463314855024587303556404522931428082402874071652851176965161039058467163493428676261866749652114400426015475164702860563436746511598369258297192563942506094686670726184574611651966996167809876862227405807133652012586894534698477068%n
flag_2=579790110178304330367566359266703308785985647850669451061360396943337414446125077952416638830292967447947330447199997024959594925832979544011106905617007604211716631896018943821885810471948656897411444397250788679301209890472096214178506743363326634017491074065208084478081574343959604369824179516116151968477173721910470310861013699837157536640682357108927679926000333195776831396236312260586923431476036768048359922198233566470068739926717125982388818562114004935075680829051894713898176119053902229201077505479269306985762211562117905679381558860844103330687633325851295%n
flag_3=16019725875586252739167546347126123196985733623251939860211306963022379933379321449817673992231736434645894317184554545983214636010042955826538087116102015847862033266472924309894546744478811010947581305545453522794106743171789329451194622239080583027502132870262333377661151331183617102821338565455945967575126876237062530338936084408498483812576747390664174020795308176189180923972609671699522096101157430164341416079402636396291603282553660103450123394116997403946719848056634663656035174545389963005014869131946670760259630204085979049539130865829808477817918987237400265516692423473616342183752981834177983320393%n
flag_4=23459343235154279290939183879093248822440868820703506565189690146911775645152845170732315592042745384622734000381598396259045911034698447894497572506579289464562378935304388303990400771291986442985146701674900357719908136129387566514185996146827283226460693305192775668361649104487740321907845944301223467966580189289635749810282924306566319870665113008658282303646414208359693131486289494332020011760781060568531151730653643034050995546807193788452413812920568634389415244737546851339335207631736103751573370802777440077623213498473802501731588335478487573160263968471356513275648971497864614991662238041079355946166%n
print(flag_1)
print("\n")
print(flag_2)
print("\n")
print(flag_3)
print(flag_4)