from Crypto.Util.number import bytes_to_long
from gmpy2 import is_prime,gcd,invert

n = 22060964356936229266187645788966773306582259764088324068797182589148922132176115602024078884033139055675752838780602928855783275954321423719103216033771539901000091574951125817160690477683338344437799453782942998716286955579150820787986785490999832285550734300340926229889208412154294758382803567827950339845135940523746758006450977783190653434673807180815664870025657083741794707525573973375713254396588027727128045515734150615980592018024739143461710444724757330705154639859491497690004651781210970736737723866049711098162208720586268852188388408312012411302374222472620214916318006334973364794200465354249324620103
e1 = 65537
e2 = 17
output_1=109171762468330811950769877080204650421032336034183871644481574779258170217172246013073543871010145028258204696878934982434682112772766121419721512571314901148640379509353601174976198183504435884641323761902539713057202412647233298104567093094053979966873982266811402758442627345349293305097707177495704504786313028760042728380333595976994437701959459688013140737536808662665091804399348674631197053647936552089267429127371506331750452146790321034770198055292053736628584244543426994524494312609215779134449438445086596777494312138795536023351177505341627695661390059124802511114367084181340789140741933903708348840
output_2=1949282033908065090797132959232040165959740645441241649631080674198950304361102150806474026382889785971842390903785093552391515272552362687258286101658056153836266433220086514323679235598843237529435710876048378519348064031537224850287492256475412640755128160678077979184994508939660110974738766325164554259100071329193526090845379661606693120279201711752008540814833769843753056602159708530094482460350388050680386218621298931605640393485062223563336022707955794290204749890663283377494184569267187515264852293598655806635123501911021952014857392186050563515138975330577161734607184484826897807877892643350090721421
"""
使用e1和e2的线性组合得到值为1的式子
即解同余式
手动求解特解为x=-8,y=30841
gcdext函数可以用来求解！！！
，，，，
对于一正一负可以通过对其中一个求逆解决
"""
output_1_1=invert(output_1,n)
print(pow(output_1_1,8,n)*pow(output_2,30841,n)%n)


